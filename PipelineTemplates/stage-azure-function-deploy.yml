# Purpose
# -------
# Stage template that applies terraform config, but has an extra step for approval of the teraform plan - is for use by infrastructure level deployments 
#

parameters:
- name: configurationDirectory
- name: workspace
- name: azureServiceConnection
- name: backendVariableGroup
- name: proxyVariableGroup        # No longer required, kept for backwards compatibility
  default: ''
- name: functionPackage
- name: appinsightsApiKey         # No longer required, kept for backwards compatibility
  default: ''
- name: appinsightsId
  default: $(application_insights_id)
- name: additionalSteps
  type: stepList
  default: []

stages:
- stage: ${{ parameters.workspace }}
  
  variables:
    - group: ${{ parameters.backendVariableGroup }}
    #- group: ${{ parameters.proxyVariableGroup }}

  jobs:
  - deployment: DeployFunctionApp
    displayName: Deploy
    
    environment: ${{ parameters.workspace }}
    workspace:
      clean: all
      
    strategy:
      runOnce:
        deploy:
          steps:
          - template: terraform-apply.yml
            parameters:
              backendServiceConnection: ${{ parameters.azureServiceConnection }}
              configurationDirectory: ${{ parameters.configurationDirectory }}
              workspace: ${{ parameters.workspace }}
              
          - task: AzureFunctionApp@1
            displayName: Deploy Azure function
            inputs:
              azureSubscription: ${{ parameters.azureServiceConnection }}
              appType: functionApp
              appName: $(function_app_name)
              package: ${{ parameters.functionPackage }}

          # This should not be required, however the AzureFunctionApp task is not adding the release annotation
          - template: release-annotation.yml
            parameters:
              applicationId: ${{ parameters.appinsightsId }}
              azureServiceConnection: ${{ parameters.azureServiceConnection }}

          - ${{ parameters.additionalSteps }}
